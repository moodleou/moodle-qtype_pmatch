{"version":3,"file":"check_valid_expression.min.js","sources":["../src/check_valid_expression.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This class validation for expression of question type pmatch/pmatchjme/combinepmatch.\n *\n * @module    qtype_pmatch\n * @class     check_valid_expression\n * @copyright 2023 The Open University\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call as fetchMany} from 'core/ajax';\nimport * as FormEvents from 'core_form/events';\nimport {exception as displayException} from 'core/notification';\n\n/**\n * Validation for expression.\n */\nconst validation = () => {\n    const answerTextareas = document.querySelectorAll('textarea[name^=\"answer\"]');\n    answerTextareas.forEach(answerextarea => {\n        answerextarea.addEventListener('blur', function(e) {\n            const pendingid = {};\n            M.util.js_pending(pendingid);\n            if (e.target.value.trim() !== '') {\n                const promises = fetchMany([{\n                    methodname: 'qtype_pmatch_validate_pmatch_expression',\n                    args: {\n                        expressionvalue: e.target.value.trim(),\n                    }\n                }]);\n                promises[0].then(function(data) {\n                    FormEvents.notifyFieldValidationFailure(e.target, data.message);\n                    M.util.js_complete(pendingid);\n                    return;\n                }).catch(displayException);\n            } else {\n                FormEvents.notifyFieldValidationFailure(e.target, '');\n            }\n        });\n    });\n};\n\nexport const init = () => {\n    validation();\n};\n"],"names":["document","querySelectorAll","forEach","answerextarea","addEventListener","e","pendingid","M","util","js_pending","target","value","trim","methodname","args","expressionvalue","then","data","FormEvents","notifyFieldValidationFailure","message","js_complete","catch","displayException"],"mappings":";;;;;;;;gCAwDoB,KAxBQA,SAASC,iBAAiB,4BAClCC,SAAQC,gBACpBA,cAAcC,iBAAiB,QAAQ,SAASC,SACtCC,UAAY,GAClBC,EAAEC,KAAKC,WAAWH,WACY,KAA1BD,EAAEK,OAAOC,MAAMC,QACE,cAAU,CAAC,CACxBC,WAAY,0CACZC,KAAM,CACFC,gBAAiBV,EAAEK,OAAOC,MAAMC,WAG/B,GAAGI,MAAK,SAASC,MACtBC,WAAWC,6BAA6Bd,EAAEK,OAAQO,KAAKG,SACvDb,EAAEC,KAAKa,YAAYf,cAEpBgB,MAAMC,yBAETL,WAAWC,6BAA6Bd,EAAEK,OAAQ"}